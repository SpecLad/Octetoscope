/*
  This file is part of Octetoscope.
  Copyright (C) 2013-2014 Octetoscope contributors (see /AUTHORS.txt)

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

apply plugin: 'base'

ext {
  scalaMajorVersion = '2.10'
  scalaVersion = "${scalaMajorVersion}.3"
  scalaLibraryDep = "org.scala-lang:scala-library:${scalaVersion}"

  scalaTestVersion = '2.0'
  scalaTestDep = "org.scalatest:scalatest_${scalaMajorVersion}:${scalaTestVersion}"

  icuVersion = '52.1'
  icuDep = "com.ibm.icu:icu4j:${icuVersion}"

  armVersion = '1.3'
  armDep = "com.jsuereth:scala-arm_${scalaMajorVersion}:${armVersion}"
}

subprojects {
  apply plugin: 'scala'

  repositories {
    mavenCentral()
  }

  dependencies {
    compile scalaLibraryDep

    testCompile scalaTestDep
  }

  targetCompatibility = '1.7'

  test << {
    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask', classpath: classpath.asPath)
    ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false') {
      reporter(type: 'stderr')
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.10'
}

task installLauncher(type: Jar) {
  from project(':application').sourceSets.main.output
  archiveName 'octetoscope.jar'
  destinationDir new File(buildDir, 'install/bin')
  manifest {
    attributes("Class-Path":
        "${-> project(':application').configurations.runtime.collect{'../lib/' + it.name}.join(' ')}")
    attributes("Main-Class": 'ru.corrigendum.octetoscope.application.Octetoscope')
  }
}

task installLibs(type: Sync) {
  from project(':application').configurations.runtime
  into new File(buildDir, 'install/lib')
}

task install(dependsOn: [installLauncher, installLibs])
