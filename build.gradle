/*
  This file is part of Octetoscope.
  Copyright (C) 2013-2014 Octetoscope contributors (see /AUTHORS.txt)

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

apply plugin: 'base'

def getVersionInfo() {
  def versionFile = file('version.gradle')

  if (versionFile.exists()) {
    def versionInfo = new VersionInfo(extraCommits: 0, commitHash: '0' * 40, dirty: false)
    apply from: versionFile, to: versionInfo
    if (versionInfo.releaseVersion == null)
      throw new InvalidUserDataException('version.gradle provided, but doesn\'t set releaseVersion')
    return versionInfo
  } else {
    return BuildUtils.getVersionInfo(project, 'release-')
  }
}

ext {
  versionInfo = getVersionInfo()

  def scalaMajorVersion = '2.10'

  deps = [
    scalaLibrary: "org.scala-lang:scala-library:$scalaMajorVersion.4",
    scalaTest: "org.scalatest:scalatest_$scalaMajorVersion:2.1.0",
    icu: 'com.ibm.icu:icu4j:52.1',
    arm: "com.jsuereth:scala-arm_$scalaMajorVersion:1.3",
  ]
}

subprojects {
  apply plugin: 'scala'

  repositories {
    mavenCentral()
  }

  dependencies {
    compile deps.scalaLibrary

    testCompile deps.scalaTest
  }

  targetCompatibility = '1.7'

  test << {
    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask', classpath: classpath.asPath)
    ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false') {
      reporter(type: 'stderr')
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.11'
}

task installLauncher(type: Jar) {
  from project(':application').sourceSets.main.output
  archiveName 'octetoscope.jar'
  destinationDir new File(buildDir, 'install/bin')
  manifest {
    attributes('Class-Path':
        "${-> project(':application').configurations.runtime.collect{'../lib/' + it.name}.join(' ')}")
    attributes('Main-Class': 'ru.corrigendum.octetoscope.application.Octetoscope')
  }
}

task installLibs(type: Sync) {
  from project(':application').configurations.runtime
  into new File(buildDir, 'install/lib')
}

task install(dependsOn: [installLauncher, installLibs])

task dist(type: Zip) {
  version versionInfo
  classifier 'bin'
  into "$baseName-$version-$classifier"
  dirMode 0755
  fileMode 0644

  from(installLauncher.outputs) {
    into 'bin'
    fileMode 0755
  }
  from(installLibs.outputs) {
    into 'lib'
  }
}

defaultTasks 'build', 'install'
