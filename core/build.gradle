/*
  This file is part of Octetoscope.
  Copyright (C) 2013 Octetoscope contributors (see /AUTHORS.txt)

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

ext {
  generatedResourcesDir = new File(buildDir, "generated/resources")
}

sourceSets {
  main {
    resources {
      srcDir generatedResourcesDir
    }
  }
}

task generateVersionInfo {
  doLast {
    def coreDir = new File(generatedResourcesDir, "ru/corrigendum/octetoscope/core")
    coreDir.mkdirs()

    def versionFile = rootProject.file('version.gradle')
    def versionInfo

    if (versionFile.exists()) {
      versionInfo = new VersionInfo(extraCommits: 0, commitHash: '0' * 40, dirty: false)
      apply from: versionFile, to: versionInfo
      if (versionInfo.releaseVersion == null)
        throw new InvalidUserDataException("version.gradle provided, but doesn't set releaseVersion")
    } else {
      versionInfo = BuildUtils.getVersionInfo(rootProject, 'release-')
    }

    // Not using the Properties class here to avoid the timestamp.
    def propString = """\
    releaseVersion = ${versionInfo.releaseVersion}
    extraCommits = ${versionInfo.extraCommits}
    commitHash = ${versionInfo.commitHash}
    dirty = ${versionInfo.dirty}
    """.stripIndent()

    new File(coreDir, "version.properties").write(propString)
  }
}

processResources {
  dependsOn generateVersionInfo
}

dependencies {
  compile armDep
}
